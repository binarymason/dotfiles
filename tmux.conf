## Setting the prefix from C-b to C-a
## START:prefix
set -g prefix C-a
## END:prefix

## Free the original Ctrl-b prefix keybinding
## START:unbind
unbind C-b
## END:unbind

## Setting the delay between prefix and command
## START:delay
set -s escape-time 1
## END:delay

## Set scrollback history to 10000 (10k)
## START:scrollback
set -g history-limit 10000
## END:scrollback

## Ensure that we can send Ctrl-A to other apps
## START:bind_prefix
bind C-a send-prefix
## END:bind_prefix

## Set the base index for windows to 1 instead of 0
## START:index
set -g base-index 1
## END:index

## Set the base index for panes to 1 instead of 0
## START:panes_index
setw -g pane-base-index 1
## END:panes_index

## Reload the file with Prefix r
## START:reload
bind r source-file ~/.tmux.conf \; display "Reloaded!"
## END:reload

## Splitting panes
## START:panesplit
bind | split-window -h
bind - split-window -v
## END:panesplit

## Moving between panes
## START:paneselect
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
## END:paneselect

## Quick pane selection
## START:panetoggle
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
## END:panetoggle

## Pane resizing
## START:paneresize
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
## END:paneresize

##### CANNOT GET THIS WORKING
## Mouse support - set to on if you want to use the mouse
## START:mouse
#setw -g mode-mouse off
#set -g mouse-select-pane off
#set -g mouse-resize-pane off
#set -g mouse-select-window off
## END:mouse

## Set the default terminal mode to 256color mode
## START:termcolor
set -g default-terminal "screen-256color"
## END:termcolor

## Enable activity alerts
## START:activity
setw -g monitor-activity on
set -g visual-activity on
## END:activity

## disable the status bar for now
set -g status off

## Set the status line's colors
## START:statuscolor
set -g status-fg white
set -g status-bg black
## END:statuscolor

## Set the color of the window list
## START:windowstatuscolor
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
## END:windowstatuscolor

## Set colors for the active window
## START:activewindowstatuscolor
setw -g window-status-current-fg white
setw -g window-status-current-bg cyan
setw -g window-status-current-attr bright
## END:activewindowstatuscolor

## Pane colors
## START:panecolors
set -g pane-border-fg white
set -g pane-border-bg default
set -g pane-active-border-fg white
set -g pane-active-border-bg default
## END:panecolors

## Command / message line
## START:cmdlinecolors
set -g message-fg white
set -g message-bg black
set -g message-attr bright
## END:cmdlinecolors

## Status line left side
## START:statusleft
set -g status-left-length 40
set -g status-left "#[fg=brightgreen]#h #[fg=white]:: #[fg=brightblue]#{pane_current_path}"
## END:statusleft

## START:utf8
#set -g utf8
#set-window-option -g utf8 on
#set -g status-utf8 on
## END:utf8

## Status line right side
## START: statusright
set -g status-right "#[fg=brightblue]%d %b %Y #[fg=white]:: #[fg=brightgreen]%l:%M %p"
## END:statusright

## Update the status bar every sixty seconds
## START:updateinterval
set -g status-interval 60
## END:updateinterval

## Center the window list
## START:centerwindowlist
set -g status-justify centre
## END:centerwindowlist

## Enable vi keys.
## START:vikeys
setw -g mode-keys vi
## END:vikeys

## Access the clipboard
## START:clipboard
set-option -g default-command "reattach-to-user-namespace -l zsh"
set-window-option -g automatic-rename on
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
## END:clipboard

## Smart pane switching with awareness of vim splits
#is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
