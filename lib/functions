#!/bin/bash

# Returns a string with full path of dotfiles.
# Usage: dot [FILENAME]
dot() {
  # Delete any preceding dots if given. Also filters out "." and ".."
  FILE=$(echo "$1" | tr -d .)
  if [ $FILE > /dev/null ]; then
    echo $DOTFILES_ROOT/.$FILE
  fi
}

link_safe() {
  SOURCE_PATH=$1

  DEFAULT_DESTINATION=$HOME/$(basename $SOURCE_PATH)
  DESTINATION_PATH=${2:-$DEFAULT_DESTINATION}

  # A file/dir doesn't already exist or is a symlink that needs an updated path
  if [ ! -e "$DESTINATION_PATH" ] || [[ -L "$DESTINATION_PATH" && "$(readlink "$DESTINATION_PATH")" != "$SOURCE_PATH" ]]; then
    echo
    echo "Linking $DESTINATION_PATH to $SOURCE_PATH"
    rm -f "$DESTINATION_PATH"
    ln -s "$SOURCE_PATH" "$DESTINATION_PATH"
  fi
}

# Links all dotfiles in root directory that are not in .symlinkignore
link_dotfiles() {
  for file in $(find $DOTFILES_ROOT -name ".[^.]*" -maxdepth 1); do
    filename=$(basename "$file")
    grep_result=$(grep -w $filename $DOTFILES_ROOT/.symlinkignore)

    if [ ! $grep_result &> /dev/null ]; then
      link_safe $file
    fi
  done
}

mkdir_safe() {
  if [[ ! -d "$1" ]]; then
    echo
    echo "Creating $1 directory"
    mkdir -p "$1"
  fi
}

latest_ruby() {
  latest_ruby=$(rbenv install -l | grep -v - | tail -1 )
  echo "$latest_ruby" | tr -d '[:space:]'
  echo
}

# Print a string with newline
log() { echo "\033[00;34m..\033[0m  $*"; }

# Print a string without newline
sameline() { printf -- "%s " "$*"; }
info() { printf -- "\033[00;34m..\033[0m  %s " "$*"; }

# Happy green checkmark
ok() { echo "\033[00;32mâœ“\033[0m"; }

abort() { echo "!!! $*" >&2; exit 1; }

